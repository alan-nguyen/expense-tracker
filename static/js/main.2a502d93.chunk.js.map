{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAEaA,EAAS,WACpB,OAAO,gD,qBCHM,WAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAcH,EAAMG,aAAaC,QAC/B,SAACD,GAAD,OAAkBA,EAAaE,KAAOJ,EAAOK,aAGnD,IAAK,kBACH,OAAO,2BACFN,GADL,IAEEG,aAAa,CAAEF,EAAOK,SAAV,mBAAsBN,EAAMG,iBAG5C,QACE,OAAOH,ICZPO,EAAe,CACnBJ,aAAc,IAIHK,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAYN,GADH,mBACvCP,EADuC,KAChCc,EADgC,KAkB9C,OACE,kBAACN,EAAcO,SAAf,CACEC,MAAO,CACLb,aAAcH,EAAMG,aACpBc,kBAlBN,SAA2BZ,GACzBS,EAAS,CACPZ,KAAM,qBACNI,QAASD,KAgBPa,eAZN,SAAwBC,GACtBL,EAAS,CACPZ,KAAM,kBACNI,QAASa,OAYRR,ICnCMS,EAAU,WAAO,IAItBC,EAHmBC,qBAAWd,GAA5BL,aAEqBoB,KAAI,SAACJ,GAAD,OAAiBA,EAAYK,UACxCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACE,6BACE,4CACA,gCAAMP,KCTCQ,EAAiB,WAAO,IAG7BC,EAFmBR,qBAAWd,GAA5BL,aAEqBoB,KAAI,SAACJ,GAAD,OAAiBA,EAAYK,UAExDO,EAASD,EACZ1B,QAAO,SAACuB,GAAD,OAAUA,EAAO,KACxBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELI,IAEH,EADDF,EAAQ1B,QAAO,SAACuB,GAAD,OAAUA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAExEC,QAAQ,GAEV,OACE,yBAAKK,UAAU,qBACb,6BACE,sCACA,uBAAGA,UAAU,cAAb,IAA4BF,IAE9B,6BACE,uCACA,uBAAGE,UAAU,eAAb,IAA6BD,MCvBxBE,EAAc,SAAC,GAAqB,IAAnBf,EAAkB,EAAlBA,YACpBF,EAAsBK,qBAAWd,GAAjCS,kBAEFkB,EAAOhB,EAAYK,OAAS,EAAI,IAAM,IAE5C,OACE,6BACE,wBAAIS,UAAWd,EAAYK,OAAS,EAAI,QAAU,QAC/CL,EAAYiB,KAAM,IACnB,8BACGD,EADH,IACUE,KAAKC,IAAInB,EAAYK,SAE/B,4BACEe,QAAS,kBAAMtB,EAAkBE,EAAYd,KAC7C4B,UAAU,cAFZ,QCXKO,EAAkB,WAAO,IAC5BrC,EAAiBmB,qBAAWd,GAA5BL,aAER,OACE,6BACE,uCACA,wBAAIE,GAAG,OAAO4B,UAAU,QACrB9B,EAAaoB,KAAI,SAACJ,GAAD,OAChB,kBAAC,EAAD,CAAasB,IAAKtB,EAAYd,GAAIc,YAAaA,UCT5CuB,EAAiB,WAAO,IAAD,EACVC,mBAAS,IADC,mBAC3BP,EAD2B,KACrBQ,EADqB,OAEND,mBAAS,GAFH,mBAE3BnB,EAF2B,KAEnBqB,EAFmB,KAI1B3B,EAAmBI,qBAAWd,GAA9BU,eAiBR,OACE,6BACE,mDACA,0BAAM4B,SAlBO,SAACC,GAChBA,EAAEC,iBAEF,IAAMC,EAAiB,CACrB5C,GAAIgC,KAAKa,MAAsB,IAAhBb,KAAKc,UACpBf,OACAZ,QAASA,GAGXN,EAAe+B,GAEfL,EAAQ,IACRC,EAAU,KAON,yBAAKZ,UAAU,gBACb,2BAAOmB,QAAQ,QAAf,QACA,2BACElD,KAAK,OACLc,MAAOoB,EACPiB,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOtC,QAClCuC,YAAY,oBAGhB,yBAAKtB,UAAU,gBACb,2BAAOmB,QAAQ,UAAf,SAEE,6BAFF,2CAKA,2BACElD,KAAK,OACLc,MAAOQ,EACP6B,SAAU,SAACN,GAAD,OAAOF,EAAUE,EAAEO,OAAOtC,QACpCuC,YAAY,sBAGhB,4BAAQtB,UAAU,OAAlB,sB,MCzBOuB,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKvB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCfRwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2a502d93.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transactions) => transactions.id !== action.payload\n        ),\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  transactions: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <div>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">${expense}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <div>\n      <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n        {transaction.text}{' '}\n        <span>\n          {sign}${Math.abs(transaction.amount)}\n        </span>\n        <button\n          onClick={() => deleteTransaction(transaction.id)}\n          className=\"delete-btn\"\n        >\n          x\n        </button>\n      </li>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <div>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 10000000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n    // Reset State\n    setText('');\n    setAmount(0);\n  };\n\n  return (\n    <div>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text ...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount\n            <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"text\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount ...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}